{"ast":null,"code":"var _jsxFileName = \"/Users/karenlei/Lambda-School/User-Onboarding/src/components/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport '../../src/index.css';\nimport Form from './Form';\nimport User from './User';\nimport formSchema from '../validation/formSchema';\nimport * as yup from 'yup';\nimport axios from 'axios';\nconst initialFormValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  terms: false\n};\nconst initialFormErrors = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  terms: false\n};\nconst initialUsers = [];\nconst initialDisabled = true;\nexport default function App() {\n  const [users, setUsers] = useState(initialUsers);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  const getUsers = () => {\n    axios.get('https://reqres.in/api/users').then(response => {\n      setUsers(response.data);\n    }).catch(error => {\n      debugger;\n    });\n  };\n\n  const postNewUser = newUser => {\n    axios.post('https://reqres.in/api/users', newUser).then(res => {\n      setUsers([res.data, ...users]);\n      console.log(res.data);\n    }).catch(error => {\n      debugger;\n    }).finally(() => {\n      setFormValues(initialFormValues);\n    });\n  };\n\n  const onInputChange = evt => {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    yup.reach(formSchema, name).validate(value).then(valid => {\n      setFormErrors({ ...formErrors,\n        [name]: ''\n      });\n    }).catch(err => {\n      setFormErrors({ ...formErrors,\n        [name]: err.errors[0]\n      });\n    });\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const onCheckboxChange = evt => {\n    const {\n      name\n    } = evt.target;\n    const {\n      checked\n    } = evt.target;\n    setFormValues({ ...formValues,\n      [name]: checked\n    });\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const newUser = {\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      terms: formValues.terms\n    };\n    console.log(terms);\n    postNewUser(newUser);\n  };\n\n  useEffect(() => {\n    getUsers();\n  }, []);\n  useEffect(() => {\n    formSchema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, \"Karen's Advanced Form\")), /*#__PURE__*/React.createElement(Form, {\n    values: formValues,\n    onInputChange: onInputChange,\n    onSubmit: onSubmit,\n    onCheckboxChange: onCheckboxChange,\n    disabled: disabled,\n    errors: formErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(User, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/karenlei/Lambda-School/User-Onboarding/src/components/App.jsx"],"names":["React","useState","useEffect","Form","User","formSchema","yup","axios","initialFormValues","firstName","lastName","email","password","terms","initialFormErrors","initialUsers","initialDisabled","App","users","setUsers","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","getUsers","get","then","response","data","catch","error","postNewUser","newUser","post","res","console","log","finally","onInputChange","evt","name","target","value","reach","validate","valid","err","errors","onCheckboxChange","checked","onSubmit","preventDefault","trim","isValid"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../src/index.css';\nimport Form from './Form'\nimport User from './User'\nimport formSchema from '../validation/formSchema'\nimport * as yup from 'yup'\nimport axios from 'axios'\n\nconst initialFormValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  terms: false,\n}\n\nconst initialFormErrors = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  terms: false, \n}\n\nconst initialUsers = []\nconst initialDisabled = true\n\nexport default function App() {\n  const [users, setUsers] = useState(initialUsers)\n  const [formValues, setFormValues] = useState(initialFormValues)\n  const [formErrors, setFormErrors] = useState(initialFormErrors)\n  const [disabled, setDisabled] = useState(initialDisabled)\n\n  const getUsers = () => {\n    axios.get('https://reqres.in/api/users')\n      .then(response => {\n        setUsers(response.data)\n      })\n      .catch(error => {\n        debugger\n      })\n  }\n\n  const postNewUser = newUser => {\n    axios.post('https://reqres.in/api/users', newUser)\n      .then(res => {\n        setUsers([res.data, ...users])\n        console.log(res.data)\n      })\n      .catch(error => {\n        debugger\n      })\n      .finally(() =>{\n        setFormValues(initialFormValues)\n      })\n  }\n\n  const onInputChange = evt => {\n    const name = evt.target.name\n    const value = evt.target.value\n\n    yup\n      .reach(formSchema, name)\n      .validate(value)\n      .then(valid => {\n        setFormErrors({\n          ...formErrors,\n          [name]: '',\n        });\n      })\n      .catch(err => {\n        setFormErrors({\n          ...formErrors,\n          [name]: err.errors[0]\n        });\n      });\n\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n  }\n\n  const onCheckboxChange = evt => {\n    const { name } = evt.target\n    const { checked } = evt.target\n    setFormValues({\n      ...formValues, \n      [name]: checked\n  })\n  }\n\n  const onSubmit = evt => {\n    evt.preventDefault()\n\n    const newUser = {\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      terms: formValues.terms\n    }\n    console.log(terms)\n    postNewUser(newUser)\n  }\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n\n  useEffect(() => {\n    formSchema.isValid(formValues)\n      .then(valid => {\n        setDisabled(!valid)\n      })\n  }, [formValues])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Karen's Advanced Form</h1>\n      </header>\n      <Form\n        values={formValues}\n        onInputChange={onInputChange}\n        onSubmit={onSubmit}\n        onCheckboxChange={onCheckboxChange}\n        disabled={disabled}\n        errors={formErrors}\n      />\n      \n      <User/>\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}