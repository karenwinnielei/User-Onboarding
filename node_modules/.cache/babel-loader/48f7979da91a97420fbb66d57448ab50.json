{"ast":null,"code":"var _jsxFileName = \"/Users/karenlei/Lambda-School/User-Onboarding/src/components/App.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport '../../src/index.css';\nimport Form from './Form';\nimport Member from './Member';\nimport formSchema from '../validation/formSchema';\nimport * as yup from 'yup';\nimport axios from 'axios';\nconst initialFormValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  terms: false\n};\nconst initialFormErrors = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '' // terms: false, \n\n};\nconst initialMembers = [];\nconst initialDisabled = true;\nexport default function App() {\n  const [members, setMembers] = useState(initialMembers);\n  const [formValues, setFormValues] = useState(initialFormValues);\n  const [formErrors, setFormErrors] = useState(initialFormErrors);\n  const [disabled, setDisabled] = useState(initialDisabled);\n  const [post, setPost] = useState([]);\n\n  const getMembers = () => {\n    axios.get('https://reqres.in/api/users').then(response => {\n      setMembers(response.data);\n      console.log(response.data);\n    }).catch(error => {\n      console.log(error, 'here is the error');\n    });\n  };\n\n  const postNewMember = newMember => {\n    axios.post('https://reqres.in/api/users', newMember).then(response => {\n      setMembers([response.data, ...members]);\n      console.log('success', response);\n    }).catch(error => {\n      console.log(error);\n    }).finally(() => {\n      setFormValues(initialFormValues);\n    });\n  };\n\n  const onInputChange = evt => {\n    const name = evt.target.name;\n    const value = evt.target.value;\n    setFormValues({ ...formValues,\n      [name]: value\n    });\n  };\n\n  const onCheckboxChange = evt => {\n    const {\n      name\n    } = evt.target;\n    const {\n      checked\n    } = evt.target;\n    setFormValues({ ...formValues,\n      [name]: checked\n    });\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    const newMember = {\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      terms: formValues.terms\n    };\n    postNewMember(newMember);\n  };\n\n  useEffect(() => {\n    getMembers();\n  }, []);\n  useEffect(() => {\n    formSchema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    });\n  }, [formValues]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, \"Karen's Advanced Form\")), /*#__PURE__*/React.createElement(Form, {\n    values: formValues,\n    onInputChange: onInputChange,\n    onSubmit: onSubmit,\n    onCheckboxChange: onCheckboxChange,\n    disabled: disabled,\n    errors: formErrors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), members.map(item => {\n    return /*#__PURE__*/React.createElement(Member, {\n      key: item.id,\n      details: member,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    });\n  }));\n}","map":{"version":3,"sources":["/Users/karenlei/Lambda-School/User-Onboarding/src/components/App.jsx"],"names":["React","useState","useEffect","Form","Member","formSchema","yup","axios","initialFormValues","firstName","lastName","email","password","terms","initialFormErrors","initialMembers","initialDisabled","App","members","setMembers","formValues","setFormValues","formErrors","setFormErrors","disabled","setDisabled","post","setPost","getMembers","get","then","response","data","console","log","catch","error","postNewMember","newMember","finally","onInputChange","evt","name","target","value","onCheckboxChange","checked","onSubmit","preventDefault","trim","isValid","valid","map","item","id","member"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../../src/index.css';\nimport Form from './Form'\nimport Member from './Member'\nimport formSchema from '../validation/formSchema'\nimport * as yup from 'yup'\nimport axios from 'axios'\n\nconst initialFormValues = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  terms: false,\n}\n\nconst initialFormErrors = {\n  firstName: '',\n  lastName: '',\n  email: '',\n  password: '',\n  // terms: false, \n}\n\nconst initialMembers = []\nconst initialDisabled = true\n\nexport default function App() {\n  const [members, setMembers] = useState(initialMembers)\n  const [formValues, setFormValues] = useState(initialFormValues)\n  const [formErrors, setFormErrors] = useState(initialFormErrors)\n  const [disabled, setDisabled] = useState(initialDisabled)\n  const [post, setPost] = useState([]);\n\n  const getMembers = () => {\n    axios.get('https://reqres.in/api/users')\n      .then(response => {\n        setMembers(response.data)\n        console.log(response.data)\n      })\n      .catch(error => {\n        console.log(error,'here is the error')\n      })\n  }\n\n  const postNewMember = newMember => {\n    axios.post('https://reqres.in/api/users', newMember)\n      .then(response => {\n        setMembers([response.data, ...members])\n        console.log('success', response)\n      })\n      .catch(error =>{\n        console.log(error)\n      })\n      .finally(() =>{\n        setFormValues(initialFormValues)\n      })\n  }\n\n  const onInputChange = evt => {\n    const name = evt.target.name\n    const value = evt.target.value\n\n    setFormValues({\n      ...formValues,\n      [name]: value\n    })\n  }\n\n  const onCheckboxChange = evt => {\n    const { name } = evt.target\n    const { checked } = evt.target\n    setFormValues({\n      ...formValues, \n      [name]: checked\n  })\n  }\n\n  const onSubmit = evt => {\n    evt.preventDefault()\n\n    const newMember = {\n      firstName: formValues.firstName.trim(),\n      lastName: formValues.lastName.trim(),\n      email: formValues.email.trim(),\n      password: formValues.password.trim(),\n      terms: formValues.terms\n    }\n    postNewMember(newMember)\n  }\n\n  useEffect(() => {\n    getMembers()\n  }, [])\n\n  useEffect(() => {\n    formSchema.isValid(formValues)\n      .then(valid => {\n        setDisabled(!valid)\n      })\n  }, [formValues])\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Karen's Advanced Form</h1>\n      </header>\n      <Form\n        values={formValues}\n        onInputChange={onInputChange}\n        onSubmit={onSubmit}\n        onCheckboxChange={onCheckboxChange}\n        disabled={disabled}\n        errors={formErrors}\n      />\n\n      {\n        members.map(item => {\n          return (\n            <Member key ={item.id} details={member}/>\n          )\n        })\n      }\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}